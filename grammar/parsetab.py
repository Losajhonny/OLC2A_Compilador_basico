
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightigualleftorleftandrightnotnonassocmayquemenquemayigualmenigualigualquedifqueleftmasmenleftpordivmodrightumenrightpowand cadena caracter coma comentario_multilinea comentario_simple decimal difque div entero id igual igualque mas mayigual mayque men menigual menque mod not or pard pari por pow pycinit :   expresionexpresion    :   expresion mas expresion\n                    |   expresion men expresion\n                    |   expresion por expresion\n                    |   expresion div expresion\n                    |   expresion mod expresion\n                    |   expresion pow expresionexpresion  :   men expresion %prec umenexpresion  :   pari expresion pardexpresion  :   enteroexpresion  :   decimalexpresion  :   cadenaexpresion  :   caracterexpresion  :   id'
    
_lr_action_items = {'men':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,],[3,11,3,3,-10,-11,-12,-13,-14,3,3,3,3,3,3,-8,11,-2,-3,-4,-5,-6,-7,-9,]),'pari':([0,3,4,10,11,12,13,14,15,],[4,4,4,4,4,4,4,4,4,]),'entero':([0,3,4,10,11,12,13,14,15,],[5,5,5,5,5,5,5,5,5,]),'decimal':([0,3,4,10,11,12,13,14,15,],[6,6,6,6,6,6,6,6,6,]),'cadena':([0,3,4,10,11,12,13,14,15,],[7,7,7,7,7,7,7,7,7,]),'caracter':([0,3,4,10,11,12,13,14,15,],[8,8,8,8,8,8,8,8,8,]),'id':([0,3,4,10,11,12,13,14,15,],[9,9,9,9,9,9,9,9,9,]),'$end':([1,2,5,6,7,8,9,16,18,19,20,21,22,23,24,],[0,-1,-10,-11,-12,-13,-14,-8,-2,-3,-4,-5,-6,-7,-9,]),'mas':([2,5,6,7,8,9,16,17,18,19,20,21,22,23,24,],[10,-10,-11,-12,-13,-14,-8,10,-2,-3,-4,-5,-6,-7,-9,]),'por':([2,5,6,7,8,9,16,17,18,19,20,21,22,23,24,],[12,-10,-11,-12,-13,-14,-8,12,12,12,-4,-5,-6,-7,-9,]),'div':([2,5,6,7,8,9,16,17,18,19,20,21,22,23,24,],[13,-10,-11,-12,-13,-14,-8,13,13,13,-4,-5,-6,-7,-9,]),'mod':([2,5,6,7,8,9,16,17,18,19,20,21,22,23,24,],[14,-10,-11,-12,-13,-14,-8,14,14,14,-4,-5,-6,-7,-9,]),'pow':([2,5,6,7,8,9,16,17,18,19,20,21,22,23,24,],[15,-10,-11,-12,-13,-14,15,15,15,15,15,15,15,15,-9,]),'pard':([5,6,7,8,9,16,17,18,19,20,21,22,23,24,],[-10,-11,-12,-13,-14,-8,24,-2,-3,-4,-5,-6,-7,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'expresion':([0,3,4,10,11,12,13,14,15,],[2,16,17,18,19,20,21,22,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> expresion','init',1,'p_init','gramatica.py',151),
  ('expresion -> expresion mas expresion','expresion',3,'p_expresion','gramatica.py',197),
  ('expresion -> expresion men expresion','expresion',3,'p_expresion','gramatica.py',198),
  ('expresion -> expresion por expresion','expresion',3,'p_expresion','gramatica.py',199),
  ('expresion -> expresion div expresion','expresion',3,'p_expresion','gramatica.py',200),
  ('expresion -> expresion mod expresion','expresion',3,'p_expresion','gramatica.py',201),
  ('expresion -> expresion pow expresion','expresion',3,'p_expresion','gramatica.py',202),
  ('expresion -> men expresion','expresion',2,'p_expresion_unaria','gramatica.py',217),
  ('expresion -> pari expresion pard','expresion',3,'p_expresion_parentesis','gramatica.py',221),
  ('expresion -> entero','expresion',1,'p_expresion_entero','gramatica.py',225),
  ('expresion -> decimal','expresion',1,'p_expresion_decimal','gramatica.py',229),
  ('expresion -> cadena','expresion',1,'p_expresion_cadena','gramatica.py',233),
  ('expresion -> caracter','expresion',1,'p_expresion_caracter','gramatica.py',237),
  ('expresion -> id','expresion',1,'p_expresion_id','gramatica.py',241),
]
